package demo;
import com.embeddedunveiled.serial.IPortMonitor;
import com.embeddedunveiled.serial.SerialComManager;
import com.embeddedunveiled.serial.SerialComManager.BAUDRATE;
import com.embeddedunveiled.serial.SerialComManager.DATABITS;
import com.embeddedunveiled.serial.SerialComManager.FLOWCONTROL;
import com.embeddedunveiled.serial.SerialComManager.PARITY;
import com.embeddedunveiled.serial.SerialComManager.STOPBITS;

// event 2 indicates port removal, 1 indicates additional of port
class portWatcher implements IPortMonitor{
	@Override
	public void onPortMonitorEvent(int event) {
		System.out.println("Event : " + event);
	}
}

public class Demo {
	public static void main(String[] args) {
		try {
			SerialComManager scm = new SerialComManager();
			portWatcher pw = new portWatcher();
			
			// for windows "COMxx", for mac "/dev/cu.usbserial-xxxxxxxx"
			long handle = scm.openComPort("/dev/ttyUSB0", true, true, true);
			scm.configureComPortData(handle, DATABITS.DB_8, STOPBITS.SB_1, PARITY.P_NONE, BAUDRATE.B115200, 0);
			scm.configureComPortControl(handle, FLOWCONTROL.NONE, '$', '$', false, false);
			scm.registerPortMonitorListener(handle, pw);

			// unplug port physically, listener will report removal, 
			// plug the port again and listener will report addition
			Thread.sleep(50000);

			scm.unregisterPortMonitorListener(handle);
			scm.closeComPort(handle);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}